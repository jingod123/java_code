// : 자바 주석 (ctrl + /)
/*여러줄 주석 (ctrl + shift + /)*/

//자바 프로젝트 기본 구조 파악 / 명명규칙(필수는 아니지만 지켜주는게 좋음!, 약속과 같은것) 알아보기
//프로젝트 > 패키지 > 클래스 > 메소드
//프로젝트 : 프로그램 구성 단위(여러 패키지, 클래스 등을 포함)
//따로 명명 규칙은 없음 (공백 사용하지 않음, 특수문자 사용하지 않음, 한글 사용 지양할 것)
//ex) my_first_project, weatherapp, MyProject 등
//패키지 : 자바 클래스들의 논리적 그룹 단위 (클래스들의 기능 별로 패키지를 나누어 관리함)
//ex) com.example.project : 도메인.회사/팀이름.프로젝트명 , 소문자, .으로 구분 (사실상 폴더로 구분됨)
//클래스 : 객체 생성 설계도 (*)
//ex) Student, OrderDetail : 첫글자 대문자 카멜케이스, 명사
//메서드 : 클래스 내에서 동작이나 기능을 수행하는 코드 블록 단위 (파이썬 함수)
//ex) getName, calculateTotal : 첫글자 소문자 카멜케이스, 동사로 시작

//공통 : 의미있이 이름 지을것! (코드는 혼자 작성하는 것이 아니기 때문에 누구나 알아볼 수 있게 지어야함)
package edu.javaclass;

//public : 공공의 (대중의) -> 이 클래스는 누구나(이 프로젝트 안에 포함되어 있기만 하면) 쓸 수 있다
public class Ex01 {
	// ctrl+f11 : run (실행)
	// ctrl+space : 작성 중인 코드 자동완성 (main)
	// main 없을 때랑 있을 때 실행 차이 확인하기
	
	//public : 공공의 (대중의) -> 이 메소드는 누구나(이 클래스 안에 포함되어 있기만 하면) 쓸 수 있다
	//static : 정적인,고정된 -> 메모리에 고정 (추후 메모리 부분에서 다시 한번 설명)
	//void : 메서드(동작/기능)의 결과의 타입자리(정수/문자열..) , void => 결과가 없을때 사용
	//main : 메서드 이름 (명명규칙 따르기!)
	//String : 자바 문자열 자료형 (S 가 대문자인거 매우 중요!, 자바는 대소문자 전부 구분함)
	//String[] : String 배열 -> 파이썬 리스트와 비슷한 자료구조
	//args : 변수명, 넘겨받은 값을 args 라는 이름으로 메서드 안에서 사용할 수 있음
	//String[] args : main 메서드(기능)을 호출할 때 넘겨야 하는 준비물(재료)
	public static void main(String[] args) {
		
		
	}

}
